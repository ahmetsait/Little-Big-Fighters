module lbf.graphics.opengl.gl.funcs;

import lbf.graphics.opengl.gl.types;

bool GL_VERSION_1_0;
bool GL_VERSION_1_1;
bool GL_VERSION_1_2;
bool GL_VERSION_1_3;
bool GL_VERSION_1_4;
bool GL_VERSION_1_5;
bool GL_VERSION_2_0;
bool GL_VERSION_2_1;
bool GL_VERSION_3_0;
bool GL_VERSION_3_1;
bool GL_VERSION_3_2;
bool GL_VERSION_3_3;

private nothrow @nogc extern(System)
{
	alias fp_glCullFace = void function(GLenum);
	alias fp_glFrontFace = void function(GLenum);
	alias fp_glHint = void function(GLenum, GLenum);
	alias fp_glLineWidth = void function(GLfloat);
	alias fp_glPointSize = void function(GLfloat);
	alias fp_glPolygonMode = void function(GLenum, GLenum);
	alias fp_glScissor = void function(GLint, GLint, GLsizei, GLsizei);
	alias fp_glTexParameterf = void function(GLenum, GLenum, GLfloat);
	alias fp_glTexParameterfv = void function(GLenum, GLenum, const(GLfloat)*);
	alias fp_glTexParameteri = void function(GLenum, GLenum, GLint);
	alias fp_glTexParameteriv = void function(GLenum, GLenum, const(GLint)*);
	alias fp_glTexImage1D = void function(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const(void)*);
	alias fp_glTexImage2D = void function(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const(void)*);
	alias fp_glDrawBuffer = void function(GLenum);
	alias fp_glClear = void function(GLbitfield);
	alias fp_glClearColor = void function(GLfloat, GLfloat, GLfloat, GLfloat);
	alias fp_glClearStencil = void function(GLint);
	alias fp_glClearDepth = void function(GLdouble);
	alias fp_glStencilMask = void function(GLuint);
	alias fp_glColorMask = void function(GLboolean, GLboolean, GLboolean, GLboolean);
	alias fp_glDepthMask = void function(GLboolean);
	alias fp_glDisable = void function(GLenum);
	alias fp_glEnable = void function(GLenum);
	alias fp_glFinish = void function();
	alias fp_glFlush = void function();
	alias fp_glBlendFunc = void function(GLenum, GLenum);
	alias fp_glLogicOp = void function(GLenum);
	alias fp_glStencilFunc = void function(GLenum, GLint, GLuint);
	alias fp_glStencilOp = void function(GLenum, GLenum, GLenum);
	alias fp_glDepthFunc = void function(GLenum);
	alias fp_glPixelStoref = void function(GLenum, GLfloat);
	alias fp_glPixelStorei = void function(GLenum, GLint);
	alias fp_glReadBuffer = void function(GLenum);
	alias fp_glReadPixels = void function(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*);
	alias fp_glGetBooleanv = void function(GLenum, GLboolean*);
	alias fp_glGetDoublev = void function(GLenum, GLdouble*);
	alias fp_glGetError = GLenum function();
	alias fp_glGetFloatv = void function(GLenum, GLfloat*);
	alias fp_glGetIntegerv = void function(GLenum, GLint*);
	alias fp_glGetString = const(GLchar)* function(GLenum);
	alias fp_glGetTexImage = void function(GLenum, GLint, GLenum, GLenum, void*);
	alias fp_glGetTexParameterfv = void function(GLenum, GLenum, GLfloat*);
	alias fp_glGetTexParameteriv = void function(GLenum, GLenum, GLint*);
	alias fp_glGetTexLevelParameterfv = void function(GLenum, GLint, GLenum, GLfloat*);
	alias fp_glGetTexLevelParameteriv = void function(GLenum, GLint, GLenum, GLint*);
	alias fp_glIsEnabled = GLboolean function(GLenum);
	alias fp_glDepthRange = void function(GLdouble, GLdouble);
	alias fp_glViewport = void function(GLint, GLint, GLsizei, GLsizei);
	alias fp_glDrawArrays = void function(GLenum, GLint, GLsizei);
	alias fp_glDrawElements = void function(GLenum, GLsizei, GLenum, const(void)*);
	alias fp_glPolygonOffset = void function(GLfloat, GLfloat);
	alias fp_glCopyTexImage1D = void function(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
	alias fp_glCopyTexImage2D = void function(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
	alias fp_glCopyTexSubImage1D = void function(GLenum, GLint, GLint, GLint, GLint, GLsizei);
	alias fp_glCopyTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
	alias fp_glTexSubImage1D = void function(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const(void)*);
	alias fp_glTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const(void)*);
	alias fp_glBindTexture = void function(GLenum, GLuint);
	alias fp_glDeleteTextures = void function(GLsizei, const(GLuint)*);
	alias fp_glGenTextures = void function(GLsizei, GLuint*);
	alias fp_glIsTexture = GLboolean function(GLuint);
	alias fp_glDrawRangeElements = void function(GLenum, GLuint, GLuint, GLsizei, GLenum, const(void)*);
	alias fp_glTexImage3D = void function(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const(void)*);
	alias fp_glTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const(void)*);
	alias fp_glCopyTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
	alias fp_glActiveTexture = void function(GLenum);
	alias fp_glSampleCoverage = void function(GLfloat, GLboolean);
	alias fp_glCompressedTexImage3D = void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const(void)*);
	alias fp_glCompressedTexImage2D = void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const(void)*);
	alias fp_glCompressedTexImage1D = void function(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const(void)*);
	alias fp_glCompressedTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const(void)*);
	alias fp_glCompressedTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const(void)*);
	alias fp_glCompressedTexSubImage1D = void function(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const(void)*);
	alias fp_glGetCompressedTexImage = void function(GLenum, GLint, void*);
	alias fp_glBlendFuncSeparate = void function(GLenum, GLenum, GLenum, GLenum);
	alias fp_glMultiDrawArrays = void function(GLenum, const(GLint)*, const(GLsizei)*, GLsizei);
	alias fp_glMultiDrawElements = void function(GLenum, const(GLsizei)*, GLenum, const(void*)*, GLsizei);
	alias fp_glPointParameterf = void function(GLenum, GLfloat);
	alias fp_glPointParameterfv = void function(GLenum, const(GLfloat)*);
	alias fp_glPointParameteri = void function(GLenum, GLint);
	alias fp_glPointParameteriv = void function(GLenum, const(GLint)*);
	alias fp_glBlendColor = void function(GLfloat, GLfloat, GLfloat, GLfloat);
	alias fp_glBlendEquation = void function(GLenum);
	alias fp_glGenQueries = void function(GLsizei, GLuint*);
	alias fp_glDeleteQueries = void function(GLsizei, const(GLuint)*);
	alias fp_glIsQuery = GLboolean function(GLuint);
	alias fp_glBeginQuery = void function(GLenum, GLuint);
	alias fp_glEndQuery = void function(GLenum);
	alias fp_glGetQueryiv = void function(GLenum, GLenum, GLint*);
	alias fp_glGetQueryObjectiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetQueryObjectuiv = void function(GLuint, GLenum, GLuint*);
	alias fp_glBindBuffer = void function(GLenum, GLuint);
	alias fp_glDeleteBuffers = void function(GLsizei, const(GLuint)*);
	alias fp_glGenBuffers = void function(GLsizei, GLuint*);
	alias fp_glIsBuffer = GLboolean function(GLuint);
	alias fp_glBufferData = void function(GLenum, GLsizeiptr, const(void)*, GLenum);
	alias fp_glBufferSubData = void function(GLenum, GLintptr, GLsizeiptr, const(void)*);
	alias fp_glGetBufferSubData = void function(GLenum, GLintptr, GLsizeiptr, void*);
	alias fp_glMapBuffer = void* function(GLenum, GLenum);
	alias fp_glUnmapBuffer = GLboolean function(GLenum);
	alias fp_glGetBufferParameteriv = void function(GLenum, GLenum, GLint*);
	alias fp_glGetBufferPointerv = void function(GLenum, GLenum, void**);
	alias fp_glBlendEquationSeparate = void function(GLenum, GLenum);
	alias fp_glDrawBuffers = void function(GLsizei, const(GLenum)*);
	alias fp_glStencilOpSeparate = void function(GLenum, GLenum, GLenum, GLenum);
	alias fp_glStencilFuncSeparate = void function(GLenum, GLenum, GLint, GLuint);
	alias fp_glStencilMaskSeparate = void function(GLenum, GLuint);
	alias fp_glAttachShader = void function(GLuint, GLuint);
	alias fp_glBindAttribLocation = void function(GLuint, GLuint, const(GLchar)*);
	alias fp_glCompileShader = void function(GLuint);
	alias fp_glCreateProgram = GLuint function();
	alias fp_glCreateShader = GLuint function(GLenum);
	alias fp_glDeleteProgram = void function(GLuint);
	alias fp_glDeleteShader = void function(GLuint);
	alias fp_glDetachShader = void function(GLuint, GLuint);
	alias fp_glDisableVertexAttribArray = void function(GLuint);
	alias fp_glEnableVertexAttribArray = void function(GLuint);
	alias fp_glGetActiveAttrib = void function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
	alias fp_glGetActiveUniform = void function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
	alias fp_glGetAttachedShaders = void function(GLuint, GLsizei, GLsizei*, GLuint*);
	alias fp_glGetAttribLocation = GLint function(GLuint, const(GLchar)*);
	alias fp_glGetProgramiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetProgramInfoLog = void function(GLuint, GLsizei, GLsizei*, GLchar*);
	alias fp_glGetShaderiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetShaderInfoLog = void function(GLuint, GLsizei, GLsizei*, GLchar*);
	alias fp_glGetShaderSource = void function(GLuint, GLsizei, GLsizei*, GLchar*);
	alias fp_glGetUniformLocation = GLint function(GLuint, const(GLchar)*);
	alias fp_glGetUniformfv = void function(GLuint, GLint, GLfloat*);
	alias fp_glGetUniformiv = void function(GLuint, GLint, GLint*);
	alias fp_glGetVertexAttribdv = void function(GLuint, GLenum, GLdouble*);
	alias fp_glGetVertexAttribfv = void function(GLuint, GLenum, GLfloat*);
	alias fp_glGetVertexAttribiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetVertexAttribPointerv = void function(GLuint, GLenum, void**);
	alias fp_glIsProgram = GLboolean function(GLuint);
	alias fp_glIsShader = GLboolean function(GLuint);
	alias fp_glLinkProgram = void function(GLuint);
	alias fp_glShaderSource = void function(GLuint, GLsizei, const(GLchar*)*, const(GLint)*);
	alias fp_glUseProgram = void function(GLuint);
	alias fp_glUniform1f = void function(GLint, GLfloat);
	alias fp_glUniform2f = void function(GLint, GLfloat, GLfloat);
	alias fp_glUniform3f = void function(GLint, GLfloat, GLfloat, GLfloat);
	alias fp_glUniform4f = void function(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
	alias fp_glUniform1i = void function(GLint, GLint);
	alias fp_glUniform2i = void function(GLint, GLint, GLint);
	alias fp_glUniform3i = void function(GLint, GLint, GLint, GLint);
	alias fp_glUniform4i = void function(GLint, GLint, GLint, GLint, GLint);
	alias fp_glUniform1fv = void function(GLint, GLsizei, const(GLfloat)*);
	alias fp_glUniform2fv = void function(GLint, GLsizei, const(GLfloat)*);
	alias fp_glUniform3fv = void function(GLint, GLsizei, const(GLfloat)*);
	alias fp_glUniform4fv = void function(GLint, GLsizei, const(GLfloat)*);
	alias fp_glUniform1iv = void function(GLint, GLsizei, const(GLint)*);
	alias fp_glUniform2iv = void function(GLint, GLsizei, const(GLint)*);
	alias fp_glUniform3iv = void function(GLint, GLsizei, const(GLint)*);
	alias fp_glUniform4iv = void function(GLint, GLsizei, const(GLint)*);
	alias fp_glUniformMatrix2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glValidateProgram = void function(GLuint);
	alias fp_glVertexAttrib1d = void function(GLuint, GLdouble);
	alias fp_glVertexAttrib1dv = void function(GLuint, const(GLdouble)*);
	alias fp_glVertexAttrib1f = void function(GLuint, GLfloat);
	alias fp_glVertexAttrib1fv = void function(GLuint, const(GLfloat)*);
	alias fp_glVertexAttrib1s = void function(GLuint, GLshort);
	alias fp_glVertexAttrib1sv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttrib2d = void function(GLuint, GLdouble, GLdouble);
	alias fp_glVertexAttrib2dv = void function(GLuint, const(GLdouble)*);
	alias fp_glVertexAttrib2f = void function(GLuint, GLfloat, GLfloat);
	alias fp_glVertexAttrib2fv = void function(GLuint, const(GLfloat)*);
	alias fp_glVertexAttrib2s = void function(GLuint, GLshort, GLshort);
	alias fp_glVertexAttrib2sv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttrib3d = void function(GLuint, GLdouble, GLdouble, GLdouble);
	alias fp_glVertexAttrib3dv = void function(GLuint, const(GLdouble)*);
	alias fp_glVertexAttrib3f = void function(GLuint, GLfloat, GLfloat, GLfloat);
	alias fp_glVertexAttrib3fv = void function(GLuint, const(GLfloat)*);
	alias fp_glVertexAttrib3s = void function(GLuint, GLshort, GLshort, GLshort);
	alias fp_glVertexAttrib3sv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttrib4Nbv = void function(GLuint, const(GLbyte)*);
	alias fp_glVertexAttrib4Niv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttrib4Nsv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttrib4Nub = void function(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
	alias fp_glVertexAttrib4Nubv = void function(GLuint, const(GLubyte)*);
	alias fp_glVertexAttrib4Nuiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttrib4Nusv = void function(GLuint, const(GLushort)*);
	alias fp_glVertexAttrib4bv = void function(GLuint, const(GLbyte)*);
	alias fp_glVertexAttrib4d = void function(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
	alias fp_glVertexAttrib4dv = void function(GLuint, const(GLdouble)*);
	alias fp_glVertexAttrib4f = void function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
	alias fp_glVertexAttrib4fv = void function(GLuint, const(GLfloat)*);
	alias fp_glVertexAttrib4iv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttrib4s = void function(GLuint, GLshort, GLshort, GLshort, GLshort);
	alias fp_glVertexAttrib4sv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttrib4ubv = void function(GLuint, const(GLubyte)*);
	alias fp_glVertexAttrib4uiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttrib4usv = void function(GLuint, const(GLushort)*);
	alias fp_glVertexAttribPointer = void function(GLuint, GLint, GLenum, GLboolean, GLsizei, const(void)*);
	alias fp_glUniformMatrix2x3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix3x2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix2x4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix4x2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix3x4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glUniformMatrix4x3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
	alias fp_glColorMaski = void function(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
	alias fp_glGetBooleani_v = void function(GLenum, GLuint, GLboolean*);
	alias fp_glGetIntegeri_v = void function(GLenum, GLuint, GLint*);
	alias fp_glEnablei = void function(GLenum, GLuint);
	alias fp_glDisablei = void function(GLenum, GLuint);
	alias fp_glIsEnabledi = GLboolean function(GLenum, GLuint);
	alias fp_glBeginTransformFeedback = void function(GLenum);
	alias fp_glEndTransformFeedback = void function();
	alias fp_glBindBufferRange = void function(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
	alias fp_glBindBufferBase = void function(GLenum, GLuint, GLuint);
	alias fp_glTransformFeedbackVaryings = void function(GLuint, GLsizei, const(GLchar*)*, GLenum);
	alias fp_glGetTransformFeedbackVarying = void function(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*);
	alias fp_glClampColor = void function(GLenum, GLenum);
	alias fp_glBeginConditionalRender = void function(GLuint, GLenum);
	alias fp_glEndConditionalRender = void function();
	alias fp_glVertexAttribIPointer = void function(GLuint, GLint, GLenum, GLsizei, const(void)*);
	alias fp_glGetVertexAttribIiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetVertexAttribIuiv = void function(GLuint, GLenum, GLuint*);
	alias fp_glVertexAttribI1i = void function(GLuint, GLint);
	alias fp_glVertexAttribI2i = void function(GLuint, GLint, GLint);
	alias fp_glVertexAttribI3i = void function(GLuint, GLint, GLint, GLint);
	alias fp_glVertexAttribI4i = void function(GLuint, GLint, GLint, GLint, GLint);
	alias fp_glVertexAttribI1ui = void function(GLuint, GLuint);
	alias fp_glVertexAttribI2ui = void function(GLuint, GLuint, GLuint);
	alias fp_glVertexAttribI3ui = void function(GLuint, GLuint, GLuint, GLuint);
	alias fp_glVertexAttribI4ui = void function(GLuint, GLuint, GLuint, GLuint, GLuint);
	alias fp_glVertexAttribI1iv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttribI2iv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttribI3iv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttribI4iv = void function(GLuint, const(GLint)*);
	alias fp_glVertexAttribI1uiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttribI2uiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttribI3uiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttribI4uiv = void function(GLuint, const(GLuint)*);
	alias fp_glVertexAttribI4bv = void function(GLuint, const(GLbyte)*);
	alias fp_glVertexAttribI4sv = void function(GLuint, const(GLshort)*);
	alias fp_glVertexAttribI4ubv = void function(GLuint, const(GLubyte)*);
	alias fp_glVertexAttribI4usv = void function(GLuint, const(GLushort)*);
	alias fp_glGetUniformuiv = void function(GLuint, GLint, GLuint*);
	alias fp_glBindFragDataLocation = void function(GLuint, GLuint, const(GLchar)*);
	alias fp_glGetFragDataLocation = GLint function(GLuint, const(GLchar)*);
	alias fp_glUniform1ui = void function(GLint, GLuint);
	alias fp_glUniform2ui = void function(GLint, GLuint, GLuint);
	alias fp_glUniform3ui = void function(GLint, GLuint, GLuint, GLuint);
	alias fp_glUniform4ui = void function(GLint, GLuint, GLuint, GLuint, GLuint);
	alias fp_glUniform1uiv = void function(GLint, GLsizei, const(GLuint)*);
	alias fp_glUniform2uiv = void function(GLint, GLsizei, const(GLuint)*);
	alias fp_glUniform3uiv = void function(GLint, GLsizei, const(GLuint)*);
	alias fp_glUniform4uiv = void function(GLint, GLsizei, const(GLuint)*);
	alias fp_glTexParameterIiv = void function(GLenum, GLenum, const(GLint)*);
	alias fp_glTexParameterIuiv = void function(GLenum, GLenum, const(GLuint)*);
	alias fp_glGetTexParameterIiv = void function(GLenum, GLenum, GLint*);
	alias fp_glGetTexParameterIuiv = void function(GLenum, GLenum, GLuint*);
	alias fp_glClearBufferiv = void function(GLenum, GLint, const(GLint)*);
	alias fp_glClearBufferuiv = void function(GLenum, GLint, const(GLuint)*);
	alias fp_glClearBufferfv = void function(GLenum, GLint, const(GLfloat)*);
	alias fp_glClearBufferfi = void function(GLenum, GLint, GLfloat, GLint);
	alias fp_glGetStringi = const(GLchar)* function(GLenum, GLuint);
	alias fp_glIsRenderbuffer = GLboolean function(GLuint);
	alias fp_glBindRenderbuffer = void function(GLenum, GLuint);
	alias fp_glDeleteRenderbuffers = void function(GLsizei, const(GLuint)*);
	alias fp_glGenRenderbuffers = void function(GLsizei, GLuint*);
	alias fp_glRenderbufferStorage = void function(GLenum, GLenum, GLsizei, GLsizei);
	alias fp_glGetRenderbufferParameteriv = void function(GLenum, GLenum, GLint*);
	alias fp_glIsFramebuffer = GLboolean function(GLuint);
	alias fp_glBindFramebuffer = void function(GLenum, GLuint);
	alias fp_glDeleteFramebuffers = void function(GLsizei, const(GLuint)*);
	alias fp_glGenFramebuffers = void function(GLsizei, GLuint*);
	alias fp_glCheckFramebufferStatus = GLenum function(GLenum);
	alias fp_glFramebufferTexture1D = void function(GLenum, GLenum, GLenum, GLuint, GLint);
	alias fp_glFramebufferTexture2D = void function(GLenum, GLenum, GLenum, GLuint, GLint);
	alias fp_glFramebufferTexture3D = void function(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
	alias fp_glFramebufferRenderbuffer = void function(GLenum, GLenum, GLenum, GLuint);
	alias fp_glGetFramebufferAttachmentParameteriv = void function(GLenum, GLenum, GLenum, GLint*);
	alias fp_glGenerateMipmap = void function(GLenum);
	alias fp_glBlitFramebuffer = void function(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
	alias fp_glRenderbufferStorageMultisample = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
	alias fp_glFramebufferTextureLayer = void function(GLenum, GLenum, GLuint, GLint, GLint);
	alias fp_glMapBufferRange = void* function(GLenum, GLintptr, GLsizeiptr, GLbitfield);
	alias fp_glFlushMappedBufferRange = void function(GLenum, GLintptr, GLsizeiptr);
	alias fp_glBindVertexArray = void function(GLuint);
	alias fp_glDeleteVertexArrays = void function(GLsizei, const(GLuint)*);
	alias fp_glGenVertexArrays = void function(GLsizei, GLuint*);
	alias fp_glIsVertexArray = GLboolean function(GLuint);
	alias fp_glDrawArraysInstanced = void function(GLenum, GLint, GLsizei, GLsizei);
	alias fp_glDrawElementsInstanced = void function(GLenum, GLsizei, GLenum, const(void)*, GLsizei);
	alias fp_glTexBuffer = void function(GLenum, GLenum, GLuint);
	alias fp_glPrimitiveRestartIndex = void function(GLuint);
	alias fp_glCopyBufferSubData = void function(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
	alias fp_glGetUniformIndices = void function(GLuint, GLsizei, const(GLchar*)*, GLuint*);
	alias fp_glGetActiveUniformsiv = void function(GLuint, GLsizei, const(GLuint)*, GLenum, GLint*);
	alias fp_glGetActiveUniformName = void function(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
	alias fp_glGetUniformBlockIndex = GLuint function(GLuint, const(GLchar)*);
	alias fp_glGetActiveUniformBlockiv = void function(GLuint, GLuint, GLenum, GLint*);
	alias fp_glGetActiveUniformBlockName = void function(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
	alias fp_glUniformBlockBinding = void function(GLuint, GLuint, GLuint);
	alias fp_glDrawElementsBaseVertex = void function(GLenum, GLsizei, GLenum, const(void)*, GLint);
	alias fp_glDrawRangeElementsBaseVertex = void function(GLenum, GLuint, GLuint, GLsizei, GLenum, const(void)*, GLint);
	alias fp_glDrawElementsInstancedBaseVertex = void function(GLenum, GLsizei, GLenum, const(void)*, GLsizei, GLint);
	alias fp_glMultiDrawElementsBaseVertex = void function(GLenum, const(GLsizei)*, GLenum, const(void*)*, GLsizei, const(GLint)*);
	alias fp_glProvokingVertex = void function(GLenum);
	alias fp_glFenceSync = GLsync function(GLenum, GLbitfield);
	alias fp_glIsSync = GLboolean function(GLsync);
	alias fp_glDeleteSync = void function(GLsync);
	alias fp_glClientWaitSync = GLenum function(GLsync, GLbitfield, GLuint64);
	alias fp_glWaitSync = void function(GLsync, GLbitfield, GLuint64);
	alias fp_glGetInteger64v = void function(GLenum, GLint64*);
	alias fp_glGetSynciv = void function(GLsync, GLenum, GLsizei, GLsizei*, GLint*);
	alias fp_glGetInteger64i_v = void function(GLenum, GLuint, GLint64*);
	alias fp_glGetBufferParameteri64v = void function(GLenum, GLenum, GLint64*);
	alias fp_glFramebufferTexture = void function(GLenum, GLenum, GLuint, GLint);
	alias fp_glTexImage2DMultisample = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
	alias fp_glTexImage3DMultisample = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
	alias fp_glGetMultisamplefv = void function(GLenum, GLuint, GLfloat*);
	alias fp_glSampleMaski = void function(GLuint, GLbitfield);
	alias fp_glBindFragDataLocationIndexed = void function(GLuint, GLuint, GLuint, const(GLchar)*);
	alias fp_glGetFragDataIndex = GLint function(GLuint, const(GLchar)*);
	alias fp_glGenSamplers = void function(GLsizei, GLuint*);
	alias fp_glDeleteSamplers = void function(GLsizei, const(GLuint)*);
	alias fp_glIsSampler = GLboolean function(GLuint);
	alias fp_glBindSampler = void function(GLuint, GLuint);
	alias fp_glSamplerParameteri = void function(GLuint, GLenum, GLint);
	alias fp_glSamplerParameteriv = void function(GLuint, GLenum, const(GLint)*);
	alias fp_glSamplerParameterf = void function(GLuint, GLenum, GLfloat);
	alias fp_glSamplerParameterfv = void function(GLuint, GLenum, const(GLfloat)*);
	alias fp_glSamplerParameterIiv = void function(GLuint, GLenum, const(GLint)*);
	alias fp_glSamplerParameterIuiv = void function(GLuint, GLenum, const(GLuint)*);
	alias fp_glGetSamplerParameteriv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetSamplerParameterIiv = void function(GLuint, GLenum, GLint*);
	alias fp_glGetSamplerParameterfv = void function(GLuint, GLenum, GLfloat*);
	alias fp_glGetSamplerParameterIuiv = void function(GLuint, GLenum, GLuint*);
	alias fp_glQueryCounter = void function(GLuint, GLenum);
	alias fp_glGetQueryObjecti64v = void function(GLuint, GLenum, GLint64*);
	alias fp_glGetQueryObjectui64v = void function(GLuint, GLenum, GLuint64*);
	alias fp_glVertexAttribDivisor = void function(GLuint, GLuint);
	alias fp_glVertexAttribP1ui = void function(GLuint, GLenum, GLboolean, GLuint);
	alias fp_glVertexAttribP1uiv = void function(GLuint, GLenum, GLboolean, const(GLuint)*);
	alias fp_glVertexAttribP2ui = void function(GLuint, GLenum, GLboolean, GLuint);
	alias fp_glVertexAttribP2uiv = void function(GLuint, GLenum, GLboolean, const(GLuint)*);
	alias fp_glVertexAttribP3ui = void function(GLuint, GLenum, GLboolean, GLuint);
	alias fp_glVertexAttribP3uiv = void function(GLuint, GLenum, GLboolean, const(GLuint)*);
	alias fp_glVertexAttribP4ui = void function(GLuint, GLenum, GLboolean, GLuint);
	alias fp_glVertexAttribP4uiv = void function(GLuint, GLenum, GLboolean, const(GLuint)*);
	alias fp_glVertexP2ui = void function(GLenum, GLuint);
	alias fp_glVertexP2uiv = void function(GLenum, const(GLuint)*);
	alias fp_glVertexP3ui = void function(GLenum, GLuint);
	alias fp_glVertexP3uiv = void function(GLenum, const(GLuint)*);
	alias fp_glVertexP4ui = void function(GLenum, GLuint);
	alias fp_glVertexP4uiv = void function(GLenum, const(GLuint)*);
	alias fp_glTexCoordP1ui = void function(GLenum, GLuint);
	alias fp_glTexCoordP1uiv = void function(GLenum, const(GLuint)*);
	alias fp_glTexCoordP2ui = void function(GLenum, GLuint);
	alias fp_glTexCoordP2uiv = void function(GLenum, const(GLuint)*);
	alias fp_glTexCoordP3ui = void function(GLenum, GLuint);
	alias fp_glTexCoordP3uiv = void function(GLenum, const(GLuint)*);
	alias fp_glTexCoordP4ui = void function(GLenum, GLuint);
	alias fp_glTexCoordP4uiv = void function(GLenum, const(GLuint)*);
	alias fp_glMultiTexCoordP1ui = void function(GLenum, GLenum, GLuint);
	alias fp_glMultiTexCoordP1uiv = void function(GLenum, GLenum, const(GLuint)*);
	alias fp_glMultiTexCoordP2ui = void function(GLenum, GLenum, GLuint);
	alias fp_glMultiTexCoordP2uiv = void function(GLenum, GLenum, const(GLuint)*);
	alias fp_glMultiTexCoordP3ui = void function(GLenum, GLenum, GLuint);
	alias fp_glMultiTexCoordP3uiv = void function(GLenum, GLenum, const(GLuint)*);
	alias fp_glMultiTexCoordP4ui = void function(GLenum, GLenum, GLuint);
	alias fp_glMultiTexCoordP4uiv = void function(GLenum, GLenum, const(GLuint)*);
	alias fp_glNormalP3ui = void function(GLenum, GLuint);
	alias fp_glNormalP3uiv = void function(GLenum, const(GLuint)*);
	alias fp_glColorP3ui = void function(GLenum, GLuint);
	alias fp_glColorP3uiv = void function(GLenum, const(GLuint)*);
	alias fp_glColorP4ui = void function(GLenum, GLuint);
	alias fp_glColorP4uiv = void function(GLenum, const(GLuint)*);
	alias fp_glSecondaryColorP3ui = void function(GLenum, GLuint);
	alias fp_glSecondaryColorP3uiv = void function(GLenum, const(GLuint)*);
}
__gshared
{
	fp_glCopyTexImage1D glCopyTexImage1D;
	fp_glVertexAttribI3ui glVertexAttribI3ui;
	fp_glStencilMaskSeparate glStencilMaskSeparate;
	fp_glFramebufferRenderbuffer glFramebufferRenderbuffer;
	fp_glCompressedTexSubImage3D glCompressedTexSubImage3D;
	fp_glTexCoordP3uiv glTexCoordP3uiv;
	fp_glVertexAttrib1sv glVertexAttrib1sv;
	fp_glBindSampler glBindSampler;
	fp_glLineWidth glLineWidth;
	fp_glColorP3uiv glColorP3uiv;
	fp_glGetIntegeri_v glGetIntegeri_v;
	fp_glCompileShader glCompileShader;
	fp_glGetTransformFeedbackVarying glGetTransformFeedbackVarying;
	fp_glVertexAttribIPointer glVertexAttribIPointer;
	fp_glMultiTexCoordP3ui glMultiTexCoordP3ui;
	fp_glVertexP4ui glVertexP4ui;
	fp_glEnablei glEnablei;
	fp_glVertexAttribP4ui glVertexAttribP4ui;
	fp_glCreateShader glCreateShader;
	fp_glIsBuffer glIsBuffer;
	fp_glGetMultisamplefv glGetMultisamplefv;
	fp_glGenRenderbuffers glGenRenderbuffers;
	fp_glCopyTexSubImage2D glCopyTexSubImage2D;
	fp_glCompressedTexImage2D glCompressedTexImage2D;
	fp_glVertexAttrib1f glVertexAttrib1f;
	fp_glBlendFuncSeparate glBlendFuncSeparate;
	fp_glHint glHint;
	fp_glVertexAttrib1s glVertexAttrib1s;
	fp_glSampleMaski glSampleMaski;
	fp_glVertexP2ui glVertexP2ui;
	fp_glUniformMatrix3x2fv glUniformMatrix3x2fv;
	fp_glPointSize glPointSize;
	fp_glVertexAttrib2dv glVertexAttrib2dv;
	fp_glDeleteProgram glDeleteProgram;
	fp_glVertexAttrib4Nuiv glVertexAttrib4Nuiv;
	fp_glRenderbufferStorage glRenderbufferStorage;
	fp_glWaitSync glWaitSync;
	fp_glUniformMatrix4x3fv glUniformMatrix4x3fv;
	fp_glUniform3i glUniform3i;
	fp_glClearBufferfv glClearBufferfv;
	fp_glUniform3f glUniform3f;
	fp_glVertexAttrib4ubv glVertexAttrib4ubv;
	fp_glGetBufferParameteriv glGetBufferParameteriv;
	fp_glTexCoordP2ui glTexCoordP2ui;
	fp_glColorMaski glColorMaski;
	fp_glClearBufferfi glClearBufferfi;
	fp_glGenVertexArrays glGenVertexArrays;
	fp_glMultiTexCoordP2ui glMultiTexCoordP2ui;
	fp_glGetSamplerParameterIiv glGetSamplerParameterIiv;
	fp_glGetFragDataIndex glGetFragDataIndex;
	fp_glGetVertexAttribdv glGetVertexAttribdv;
	fp_glUniformMatrix3x4fv glUniformMatrix3x4fv;
	fp_glMultiTexCoordP4ui glMultiTexCoordP4ui;
	fp_glDeleteFramebuffers glDeleteFramebuffers;
	fp_glDrawArrays glDrawArrays;
	fp_glUniform1ui glUniform1ui;
	fp_glVertexAttribI2i glVertexAttribI2i;
	fp_glTexCoordP3ui glTexCoordP3ui;
	fp_glVertexAttrib3d glVertexAttrib3d;
	fp_glClear glClear;
	fp_glGetActiveUniformName glGetActiveUniformName;
	fp_glIsEnabled glIsEnabled;
	fp_glStencilOp glStencilOp;
	fp_glFramebufferTexture2D glFramebufferTexture2D;
	fp_glGetFramebufferAttachmentParameteriv glGetFramebufferAttachmentParameteriv;
	fp_glVertexAttrib4Nub glVertexAttrib4Nub;
	fp_glGetFragDataLocation glGetFragDataLocation;
	fp_glTexImage1D glTexImage1D;
	fp_glTexParameteriv glTexParameteriv;
	fp_glGetTexImage glGetTexImage;
	fp_glGetQueryObjecti64v glGetQueryObjecti64v;
	fp_glGenFramebuffers glGenFramebuffers;
	fp_glGetAttachedShaders glGetAttachedShaders;
	fp_glIsRenderbuffer glIsRenderbuffer;
	fp_glDeleteVertexArrays glDeleteVertexArrays;
	fp_glIsVertexArray glIsVertexArray;
	fp_glDisableVertexAttribArray glDisableVertexAttribArray;
	fp_glGetQueryiv glGetQueryiv;
	fp_glGetSamplerParameterfv glGetSamplerParameterfv;
	fp_glGetUniformIndices glGetUniformIndices;
	fp_glIsShader glIsShader;
	fp_glVertexAttribI4ubv glVertexAttribI4ubv;
	fp_glPointParameteriv glPointParameteriv;
	fp_glEnable glEnable;
	fp_glGetActiveUniformsiv glGetActiveUniformsiv;
	fp_glGetAttribLocation glGetAttribLocation;
	fp_glVertexAttrib4dv glVertexAttrib4dv;
	fp_glMultiTexCoordP3uiv glMultiTexCoordP3uiv;
	fp_glVertexAttribP3ui glVertexAttribP3ui;
	fp_glGetUniformfv glGetUniformfv;
	fp_glGetUniformuiv glGetUniformuiv;
	fp_glGetVertexAttribIiv glGetVertexAttribIiv;
	fp_glDrawBuffer glDrawBuffer;
	fp_glClearBufferuiv glClearBufferuiv;
	fp_glDrawElementsInstanced glDrawElementsInstanced;
	fp_glFlush glFlush;
	fp_glGetRenderbufferParameteriv glGetRenderbufferParameteriv;
	fp_glGetVertexAttribPointerv glGetVertexAttribPointerv;
	fp_glFenceSync glFenceSync;
	fp_glColorP3ui glColorP3ui;
	fp_glVertexAttrib3sv glVertexAttrib3sv;
	fp_glBeginConditionalRender glBeginConditionalRender;
	fp_glGetTexLevelParameteriv glGetTexLevelParameteriv;
	fp_glMultiTexCoordP4uiv glMultiTexCoordP4uiv;
	fp_glStencilFuncSeparate glStencilFuncSeparate;
	fp_glGenSamplers glGenSamplers;
	fp_glClampColor glClampColor;
	fp_glUniform4iv glUniform4iv;
	fp_glClearStencil glClearStencil;
	fp_glTexCoordP1uiv glTexCoordP1uiv;
	fp_glGenTextures glGenTextures;
	fp_glGetTexParameterIuiv glGetTexParameterIuiv;
	fp_glVertexAttrib4Nbv glVertexAttrib4Nbv;
	fp_glIsSync glIsSync;
	fp_glGetActiveUniformBlockName glGetActiveUniformBlockName;
	fp_glUniform2i glUniform2i;
	fp_glUniform2f glUniform2f;
	fp_glTexCoordP4ui glTexCoordP4ui;
	fp_glGetProgramiv glGetProgramiv;
	fp_glVertexAttribPointer glVertexAttribPointer;
	fp_glFramebufferTextureLayer glFramebufferTextureLayer;
	fp_glFlushMappedBufferRange glFlushMappedBufferRange;
	fp_glGenQueries glGenQueries;
	fp_glVertexAttribP1ui glVertexAttribP1ui;
	fp_glTexSubImage3D glTexSubImage3D;
	fp_glGetInteger64i_v glGetInteger64i_v;
	fp_glDeleteSamplers glDeleteSamplers;
	fp_glCopyTexImage2D glCopyTexImage2D;
	fp_glBlitFramebuffer glBlitFramebuffer;
	fp_glIsEnabledi glIsEnabledi;
	fp_glSecondaryColorP3ui glSecondaryColorP3ui;
	fp_glBindFragDataLocationIndexed glBindFragDataLocationIndexed;
	fp_glUniform2iv glUniform2iv;
	fp_glVertexAttrib1fv glVertexAttrib1fv;
	fp_glUniform4uiv glUniform4uiv;
	fp_glFramebufferTexture1D glFramebufferTexture1D;
	fp_glGetShaderiv glGetShaderiv;
	fp_glBindFragDataLocation glBindFragDataLocation;
	fp_glPolygonOffset glPolygonOffset;
	fp_glGetDoublev glGetDoublev;
	fp_glVertexAttrib1d glVertexAttrib1d;
	fp_glGetUniformiv glGetUniformiv;
	fp_glMultiTexCoordP1uiv glMultiTexCoordP1uiv;
	fp_glUniform3fv glUniform3fv;
	fp_glDepthRange glDepthRange;
	fp_glMapBuffer glMapBuffer;
	fp_glCompressedTexImage3D glCompressedTexImage3D;
	fp_glDeleteSync glDeleteSync;
	fp_glCopyTexSubImage3D glCopyTexSubImage3D;
	fp_glGetVertexAttribiv glGetVertexAttribiv;
	fp_glMultiDrawElements glMultiDrawElements;
	fp_glVertexAttrib3fv glVertexAttrib3fv;
	fp_glUniform3iv glUniform3iv;
	fp_glPolygonMode glPolygonMode;
	fp_glDrawBuffers glDrawBuffers;
	fp_glGetActiveUniformBlockiv glGetActiveUniformBlockiv;
	fp_glUseProgram glUseProgram;
	fp_glGetProgramInfoLog glGetProgramInfoLog;
	fp_glBindVertexArray glBindVertexArray;
	fp_glDeleteBuffers glDeleteBuffers;
	fp_glSamplerParameterIiv glSamplerParameterIiv;
	fp_glMultiDrawElementsBaseVertex glMultiDrawElementsBaseVertex;
	fp_glUniform2uiv glUniform2uiv;
	fp_glCompressedTexSubImage1D glCompressedTexSubImage1D;
	fp_glFinish glFinish;
	fp_glDeleteShader glDeleteShader;
	fp_glVertexAttrib4Nsv glVertexAttrib4Nsv;
	fp_glViewport glViewport;
	fp_glUniform1uiv glUniform1uiv;
	fp_glTransformFeedbackVaryings glTransformFeedbackVaryings;
	fp_glUniform2ui glUniform2ui;
	fp_glVertexAttribI3i glVertexAttribI3i;
	fp_glClearDepth glClearDepth;
	fp_glVertexAttribI4usv glVertexAttribI4usv;
	fp_glTexParameterf glTexParameterf;
	fp_glTexParameteri glTexParameteri;
	fp_glGetShaderSource glGetShaderSource;
	fp_glTexBuffer glTexBuffer;
	fp_glPixelStorei glPixelStorei;
	fp_glValidateProgram glValidateProgram;
	fp_glPixelStoref glPixelStoref;
	fp_glGetBooleani_v glGetBooleani_v;
	fp_glMultiTexCoordP2uiv glMultiTexCoordP2uiv;
	fp_glVertexAttribP1uiv glVertexAttribP1uiv;
	fp_glLinkProgram glLinkProgram;
	fp_glBindTexture glBindTexture;
	fp_glGetString glGetString;
	fp_glVertexAttribP2uiv glVertexAttribP2uiv;
	fp_glDetachShader glDetachShader;
	fp_glEndQuery glEndQuery;
	fp_glNormalP3ui glNormalP3ui;
	fp_glVertexAttribI2ui glVertexAttribI2ui;
	fp_glDeleteTextures glDeleteTextures;
	fp_glStencilOpSeparate glStencilOpSeparate;
	fp_glDeleteQueries glDeleteQueries;
	fp_glNormalP3uiv glNormalP3uiv;
	fp_glVertexAttrib4f glVertexAttrib4f;
	fp_glVertexAttrib4d glVertexAttrib4d;
	fp_glGetTexParameteriv glGetTexParameteriv;
	fp_glVertexAttrib4s glVertexAttrib4s;
	fp_glDrawElementsBaseVertex glDrawElementsBaseVertex;
	fp_glSampleCoverage glSampleCoverage;
	fp_glSamplerParameteri glSamplerParameteri;
	fp_glSamplerParameterf glSamplerParameterf;
	fp_glUniform1f glUniform1f;
	fp_glGetVertexAttribfv glGetVertexAttribfv;
	fp_glGetCompressedTexImage glGetCompressedTexImage;
	fp_glUniform1i glUniform1i;
	fp_glGetActiveAttrib glGetActiveAttrib;
	fp_glTexSubImage2D glTexSubImage2D;
	fp_glDisable glDisable;
	fp_glLogicOp glLogicOp;
	fp_glUniform4ui glUniform4ui;
	fp_glBindFramebuffer glBindFramebuffer;
	fp_glCullFace glCullFace;
	fp_glGetStringi glGetStringi;
	fp_glAttachShader glAttachShader;
	fp_glQueryCounter glQueryCounter;
	fp_glProvokingVertex glProvokingVertex;
	fp_glDrawElements glDrawElements;
	fp_glVertexAttribI4sv glVertexAttribI4sv;
	fp_glUniform1iv glUniform1iv;
	fp_glGetQueryObjectiv glGetQueryObjectiv;
	fp_glReadBuffer glReadBuffer;
	fp_glTexParameterIuiv glTexParameterIuiv;
	fp_glDrawArraysInstanced glDrawArraysInstanced;
	fp_glGenerateMipmap glGenerateMipmap;
	fp_glSamplerParameteriv glSamplerParameteriv;
	fp_glVertexAttrib3f glVertexAttrib3f;
	fp_glVertexAttrib4uiv glVertexAttrib4uiv;
	fp_glPointParameteri glPointParameteri;
	fp_glBlendColor glBlendColor;
	fp_glSamplerParameterIuiv glSamplerParameterIuiv;
	fp_glUnmapBuffer glUnmapBuffer;
	fp_glPointParameterf glPointParameterf;
	fp_glVertexAttrib3s glVertexAttrib3s;
	fp_glBindRenderbuffer glBindRenderbuffer;
	fp_glVertexAttribP4uiv glVertexAttribP4uiv;
	fp_glIsProgram glIsProgram;
	fp_glVertexAttrib4bv glVertexAttrib4bv;
	fp_glVertexAttrib4fv glVertexAttrib4fv;
	fp_glUniform4i glUniform4i;
	fp_glActiveTexture glActiveTexture;
	fp_glEnableVertexAttribArray glEnableVertexAttribArray;
	fp_glReadPixels glReadPixels;
	fp_glVertexAttribI3iv glVertexAttribI3iv;
	fp_glUniform4f glUniform4f;
	fp_glRenderbufferStorageMultisample glRenderbufferStorageMultisample;
	fp_glUniformMatrix3fv glUniformMatrix3fv;
	fp_glDrawElementsInstancedBaseVertex glDrawElementsInstancedBaseVertex;
	fp_glStencilFunc glStencilFunc;
	fp_glUniformBlockBinding glUniformBlockBinding;
	fp_glColorP4ui glColorP4ui;
	fp_glVertexAttribI4iv glVertexAttribI4iv;
	fp_glGetShaderInfoLog glGetShaderInfoLog;
	fp_glVertexAttribI4i glVertexAttribI4i;
	fp_glGetBufferSubData glGetBufferSubData;
	fp_glBlendEquationSeparate glBlendEquationSeparate;
	fp_glVertexAttribI1ui glVertexAttribI1ui;
	fp_glGenBuffers glGenBuffers;
	fp_glVertexAttrib2sv glVertexAttrib2sv;
	fp_glBlendFunc glBlendFunc;
	fp_glCreateProgram glCreateProgram;
	fp_glTexImage3D glTexImage3D;
	fp_glIsFramebuffer glIsFramebuffer;
	fp_glPrimitiveRestartIndex glPrimitiveRestartIndex;
	fp_glGetInteger64v glGetInteger64v;
	fp_glScissor glScissor;
	fp_glTexCoordP4uiv glTexCoordP4uiv;
	fp_glGetBooleanv glGetBooleanv;
	fp_glVertexP2uiv glVertexP2uiv;
	fp_glUniform3uiv glUniform3uiv;
	fp_glClearColor glClearColor;
	fp_glVertexAttrib4Niv glVertexAttrib4Niv;
	fp_glClearBufferiv glClearBufferiv;
	fp_glGetBufferParameteri64v glGetBufferParameteri64v;
	fp_glColorP4uiv glColorP4uiv;
	fp_glVertexAttribI2uiv glVertexAttribI2uiv;
	fp_glUniform3ui glUniform3ui;
	fp_glVertexAttribI4uiv glVertexAttribI4uiv;
	fp_glPointParameterfv glPointParameterfv;
	fp_glUniform2fv glUniform2fv;
	fp_glGetSamplerParameterIuiv glGetSamplerParameterIuiv;
	fp_glBindBufferRange glBindBufferRange;
	fp_glUniformMatrix2x3fv glUniformMatrix2x3fv;
	fp_glGetVertexAttribIuiv glGetVertexAttribIuiv;
	fp_glVertexAttrib4Nusv glVertexAttrib4Nusv;
	fp_glDepthFunc glDepthFunc;
	fp_glCompressedTexSubImage2D glCompressedTexSubImage2D;
	fp_glVertexAttribI4bv glVertexAttribI4bv;
	fp_glGetTexParameterfv glGetTexParameterfv;
	fp_glMultiTexCoordP1ui glMultiTexCoordP1ui;
	fp_glClientWaitSync glClientWaitSync;
	fp_glVertexAttribI4ui glVertexAttribI4ui;
	fp_glColorMask glColorMask;
	fp_glTexParameterIiv glTexParameterIiv;
	fp_glBlendEquation glBlendEquation;
	fp_glGetUniformLocation glGetUniformLocation;
	fp_glEndTransformFeedback glEndTransformFeedback;
	fp_glVertexAttrib4usv glVertexAttrib4usv;
	fp_glUniform4fv glUniform4fv;
	fp_glBeginTransformFeedback glBeginTransformFeedback;
	fp_glVertexAttribI1iv glVertexAttribI1iv;
	fp_glIsSampler glIsSampler;
	fp_glVertexP3ui glVertexP3ui;
	fp_glVertexAttribDivisor glVertexAttribDivisor;
	fp_glCompressedTexImage1D glCompressedTexImage1D;
	fp_glCopyTexSubImage1D glCopyTexSubImage1D;
	fp_glDrawRangeElementsBaseVertex glDrawRangeElementsBaseVertex;
	fp_glCheckFramebufferStatus glCheckFramebufferStatus;
	fp_glEndConditionalRender glEndConditionalRender;
	fp_glVertexP3uiv glVertexP3uiv;
	fp_glBindAttribLocation glBindAttribLocation;
	fp_glUniformMatrix4x2fv glUniformMatrix4x2fv;
	fp_glVertexAttrib1dv glVertexAttrib1dv;
	fp_glDrawRangeElements glDrawRangeElements;
	fp_glGetQueryObjectuiv glGetQueryObjectuiv;
	fp_glBindBufferBase glBindBufferBase;
	fp_glBufferSubData glBufferSubData;
	fp_glVertexAttrib4iv glVertexAttrib4iv;
	fp_glMapBufferRange glMapBufferRange;
	fp_glFramebufferTexture glFramebufferTexture;
	fp_glMultiDrawArrays glMultiDrawArrays;
	fp_glVertexP4uiv glVertexP4uiv;
	fp_glVertexAttribI2iv glVertexAttribI2iv;
	fp_glDisablei glDisablei;
	fp_glShaderSource glShaderSource;
	fp_glDeleteRenderbuffers glDeleteRenderbuffers;
	fp_glVertexAttribI3uiv glVertexAttribI3uiv;
	fp_glGetSynciv glGetSynciv;
	fp_glTexCoordP2uiv glTexCoordP2uiv;
	fp_glBeginQuery glBeginQuery;
	fp_glUniformMatrix4fv glUniformMatrix4fv;
	fp_glBindBuffer glBindBuffer;
	fp_glUniformMatrix2fv glUniformMatrix2fv;
	fp_glUniformMatrix2x4fv glUniformMatrix2x4fv;
	fp_glBufferData glBufferData;
	fp_glGetTexParameterIiv glGetTexParameterIiv;
	fp_glTexCoordP1ui glTexCoordP1ui;
	fp_glGetError glGetError;
	fp_glVertexAttribP2ui glVertexAttribP2ui;
	fp_glGetFloatv glGetFloatv;
	fp_glTexSubImage1D glTexSubImage1D;
	fp_glVertexAttrib2fv glVertexAttrib2fv;
	fp_glGetTexLevelParameterfv glGetTexLevelParameterfv;
	fp_glVertexAttribI1i glVertexAttribI1i;
	fp_glVertexAttribP3uiv glVertexAttribP3uiv;
	fp_glSecondaryColorP3uiv glSecondaryColorP3uiv;
	fp_glGetIntegerv glGetIntegerv;
	fp_glGetBufferPointerv glGetBufferPointerv;
	fp_glFramebufferTexture3D glFramebufferTexture3D;
	fp_glIsQuery glIsQuery;
	fp_glVertexAttrib4sv glVertexAttrib4sv;
	fp_glTexImage2D glTexImage2D;
	fp_glStencilMask glStencilMask;
	fp_glSamplerParameterfv glSamplerParameterfv;
	fp_glIsTexture glIsTexture;
	fp_glUniform1fv glUniform1fv;
	fp_glVertexAttrib4Nubv glVertexAttrib4Nubv;
	fp_glTexParameterfv glTexParameterfv;
	fp_glGetSamplerParameteriv glGetSamplerParameteriv;
	fp_glCopyBufferSubData glCopyBufferSubData;
	fp_glVertexAttribI1uiv glVertexAttribI1uiv;
	fp_glVertexAttrib2d glVertexAttrib2d;
	fp_glVertexAttrib2f glVertexAttrib2f;
	fp_glVertexAttrib3dv glVertexAttrib3dv;
	fp_glGetQueryObjectui64v glGetQueryObjectui64v;
	fp_glDepthMask glDepthMask;
	fp_glVertexAttrib2s glVertexAttrib2s;
	fp_glTexImage3DMultisample glTexImage3DMultisample;
	fp_glGetUniformBlockIndex glGetUniformBlockIndex;
	fp_glTexImage2DMultisample glTexImage2DMultisample;
	fp_glGetActiveUniform glGetActiveUniform;
	fp_glFrontFace glFrontFace;
}
